@startuml

hide class methods
hide interface attributes

left to right direction

title "US1003 - Class Diagram"

rectangle openings #aabbcc{

    class JobOpening<<Root Entity>>{}

    class JobReference<<Value Object>><<Id>>{
        - reference : String
    }

    class JobOpeningDate<<Value Object>>{
        - date : Date
    }

    package filter #bbccaa{

    interface JobOpeningFilter<<Strategy>><<Chain Of Responsibility>><<Pure Fabrication>>{
            + filter(openings : List<JobOpening>) : List<JobOpening>
            ''- cascade(openings : List<JobOpening>)) : List<JobOpening>
        }

        class JobOpeningDateIntervalFilter<<Strategy>><<Chain Of Responsibility>><<Pure Fabrication>> extends JobOpeningFilter{
            - startDate: Date
            - endDate : Date
        }

        class JobOpeningCostumerNameFilter<<Strategy>><<Chain Of Responsibility>><<Pure Fabrication>> extends JobOpeningFilter{
            - costumerName: String
        }

        class JobOpeningCostumerIdFilter<<Strategy>><<Chain Of Responsibility>><<Pure Fabrication>> extends JobOpeningFilter{
            - costumerId : Long
        }

        JobOpeningFilter ..> JobOpening : Filters the lists of Job Openings
        JobOpeningFilter"1" *--> "0..1"JobOpeningFilter : next
    }

    JobOpening"1" *-up-> "1"JobReference: reference
    JobOpening"1" *-->"1"JobOpeningDate: startDate
    JobOpening"1" *-->"1"JobOpeningDate: endDate

}


rectangle customer #bbaacc{

    class Costumer<<Root Entity>>{}

    class CostumerId<<Value Object>><<Identifier>>{
        - id : Long
    }

    class CostumerName<<Value Object>>{
        - name : String
    }

    Costumer"1" *--> "1"CostumerId: id
    Costumer"1" *--> "1"CostumerName: name

    JobOpening"*" o--> "1"Costumer : opening

}










@enduml