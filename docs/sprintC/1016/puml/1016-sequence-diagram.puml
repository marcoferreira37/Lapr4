@startuml
'https://plantuml.com/use-case-diagram
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
autonumber

participant "FollowupServer" as FS
participant "Server" as S
participant "EmailToSendThread" as ET
participant "SendsEmail" as ES
participant "EmailService" as ESvc
participant ":emailToSendRepository" as Repo <<Persistence>>



activate FS
FS -> S: Server(portNumber)
activate S
S --> FS: Server
deactivate S
FS -> ET: EmailThread()
activate ET
ET --> FS: EmailThread
ET -> ESvc: findToSends()
activate ESvc

ESvc -> Repo: findToSends()
activate Repo
Repo --> ESvc: list
deactivate Repo
ESvc --> ET: list
deactivate ESvc
ET --> ET : iterator(email)

ET -> ES: sendEmail(email, content)
activate ES

ES --> ET: EmailSender
deactivate ES
FS -> ET: start()

deactivate ESvc

deactivate ESvc
ET -> ES: sendEmail(email.email(), email.text())
activate ES
loop for each email to be sent in the listOfEmails
ES --> ET: success message
deactivate ES
end

ET -> ESvc: setEmailAsSent(email)
activate ESvc

ESvc -> Repo: save(email)
deactivate ESvc

activate Repo
ET --> FS: success message
deactivate Repo

deactivate ET
deactivate FS

note right of FS
  This sequence diagram only represents the system's behavior
   when the follow-up server is started and the emails are sent,
    the way of obtaining the data is shown on user story 1015 sequence diagram
end note


@enduml