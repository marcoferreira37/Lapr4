@startuml

actor "Customer Manager" as Agent
participant ":RecordInterviewUI" as ui <<UI>>
participant ":RecordInterviewController" as ctrl <<Application>>
participant ":JobOpeningApplicationService" as jobApServ <<Service>>
participant ":JobOpeningApplicationRepository" as jobRepo <<Persistence>>
'participant ":ApplicationService" as appServ <<Service>>
participant ":InterviewRepository" as intRepo <<Persistence>>
'participant "app:JobOpeningApplication" as app <<Domain>>
participant ":JobInterview" as interview <<Domain>>


autonumber

activate Agent

Agent -> ui: Record the time and date for an interview with a candidate
activate ui

ui -> ctrl: getJobOpeningApplication()



activate ctrl

ctrl -> jobApServ: getJobOpeningApplication()

activate jobApServ

jobApServ -> jobRepo: findAll()
activate jobRepo

jobRepo --> jobApServ: JobOpeningApplications

deactivate jobRepo


jobApServ --> ctrl: JobOpeningApplications
deactivate jobApServ


ctrl --> ui: JobOpeningApplications
deactivate ctrl


ui --> Agent: JobOpeningApplications
deactivate ui



Agent -> ui: Record the time and date for an interview with the candidate
activate ui

ui -> ctrl: recordInterview(jobOpeningApplication, interviewTime, interviewDate)

activate ctrl

ctrl -> jobApServ: recordInterview(jobOpeningApplication, interviewTime, interviewDate)

activate jobApServ
jobApServ -> interview** : «creates»
activate interview

interview --> jobApServ: jobInterview

deactivate interview

jobApServ -> intRepo: save(jobInterview)

activate intRepo

intRepo --> jobApServ: Saved Jobinterview
deactivate intRepo





deactivate intRepo


jobApServ --> ctrl: Saved JobInterview
deactivate jobApServ


ctrl --> ui: Saved JobInterview
deactivate ctrl

ui --> Agent: Saved JobInterview

deactivate ui






@enduml